services:
  # PostgreSQL Database with vector extension
  postgres:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_DB: ai_clip_curator
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - app-network

  # Redis for caching and job queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  # Main Next.js application
  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/ai_clip_curator
      - NEXTAUTH_SECRET=development-secret-key
      - NEXTAUTH_URL=http://localhost:3000
      - UPLOAD_DIR=/app/uploads
    volumes:
      - ./uploads:/app/uploads
      - ./src:/app/src
      - ./public:/app/public
    depends_on:
      - postgres
      - redis
    networks:
      - app-network
    # Enable hot reload in development
    command: npm run dev

  # AI Worker (for future implementation)
  ai-worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/ai_clip_curator
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      - postgres
      - redis
    networks:
      - app-network
    profiles:
      - worker

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
